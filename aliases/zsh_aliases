#  system {{{ # 

# # vim mode {{{ #
# bindkey -v
# function zle-line-init zle-keymap-select {
    # VIM_PROMPT="%{$fg_bold[yellow]%} [% NORMAL]%  %{$reset_color%}"
    # RPS1="${${KEYMAP/vicmd/$VIM_PROMPT}/(main|viins)/} $EPS1"
    # zle reset-prompt
# }
# zle -N zle-line-init
# zle -N zle-keymap-select
# export KEYTIMEOUT=1
# #  }}} vim mode #

#  command line related {{{ # 
# search history
bindkey '\e[A' history-beginning-search-backward
bindkey '\e[B' history-beginning-search-forward

alias cs='printf "\033c"'
alias hst="history"
alias nf="cs && neofetch | lolcat"
# nf
alias ru="xrdb ~/.Xresources"
# list file sizes in megabytes with depth 1
alias dum="sudo du -d 1 -B M"

alias grbm="sudo grub-mkconfig -o /boot/grub/grub.cfg"

function cld() { colordiff -y --suppress-common-lines $1 $2 ; } 
alias grep='grep --color=auto'
function gpdf() {
	pdfgrep -n -e $1 $2
}
# for finding files by name
export FZF_DEFAULT_COMMAND='ag --hidden --ignore .git -g ""'
# find text inside files
function rg() { grep -nr $1 ; }
function cpd() { cp -avr $1 $2 ; } 
alias pk="pkill -f"

# extract tar archive
function utar() { tar -xzvf $1 && rm $1; } 
function rzip() { unzip $1 && rm $1; } 
function lzip() { unzip -l $1 | less; } 

alias mkpk="makepkg -sri"
alias mkex="chmod 777"
alias ctl="systemctl"
alias ctle="systemctl enable"
alias ctls="systemctl start"

#  mounting {{{ # 

alias udm="udisksctl mount -b"
alias udmb="udisksctl mount -b /dev/sdc2"
alias udu="udisksctl unmount -b"
alias udub="udisksctl unmount -b /dev/sdc2"

#  }}} mounting # 

alias tc="touch"
shrm() { 
	for file in "$@"; do
		shred "$file" && rm "$file"
	done
}

#  }}} command line related # 

#  directory-related {{{ # 
alias l='ls -a'
alias ll='ls -alFh'
alias f="cd"
f `cat /home/kevin/.oh-my-zsh/cache/last-working-dir`
# alias w="cd $(cat /home/kevin/.oh-my-zsh/cache/last-working-dir)"

alias rmr="rm -rf"
alias mdp="mkdir -p"

alias "f."="f .."
alias "f.."="f ..."

function mvd() { mv $1 ~/Downloads ; }
alias lhd="sudo fdisk -l"
alias ds="df -h | grep sd"
alias chownw="sudo chown -R kevin:wheel"
alias nbu="f /run/media/kevin/pc-backup/backups/nzxt && ll | grep gz"

#  }}}  directory-related # 

#  power options {{{ # 
alias s="systemctl suspend -i"
alias sd="sudo shutdown 0"
alias reb="sudo shutdown -r 0"
alias lo="i3-msg exit"
#  }}} power options # 

#  rotate monitor {{{ # 
function rt() {
	output="HDMI-0"
	if [ "$1" = "s" ]
	# if [ "${1:0:1}" = "s" ]
	then
		output="DVI-I-1"
	fi

	dir="normal"
	if [ "$2" = "r" ]
	# if [ "${1:1:2}" = "r" ]
	then
		dir="right"
	fi
	if [ "$2" = "l" ]
	then
		dir="left"
	fi

	# echo "xrandr --output \"$output\" --rotate \"$dir\""
	xrandr --output "$output" --rotate "$dir"
}
#  }}} rotate monitor # 

# sound
alias vlm="alsamixer -c 0"
alias vlh="alsamixer -c 2"

# apt
# function apti() { sudo apt install $1 ; }
# function aptr() { sudo apt remove $1 ; }
# alias aptu="sudo apt upgrade"
alias pc="sudo pacman -S"
alias pcu="sudo pacman -Sy"
alias pcr="sudo pacman -Rs"
alias xpc="pacman -Qqe > ~/linux-config/txt/pacman-pkgs/nzxt-pkgs.txt"
# alias tri="trizen -S --noconfirm"
alias tri="trizen -S"

#  }}} system # 

# config files {{{ #
function gz() { grep $1 ~/linux-config/aliases/zsh_aliases ; } 
alias rz="source ~/linux-config/aliases/zsh_aliases"
alias lca="f ~/linux-config/aliases"

#  i3 
alias i3b="f ~/i3blocks"
alias pipes="pipes.sh -t 3"
	
# UltiSnips {{{ #
urnp_dir="~/.vim/plugged/vim-snippets/UltiSnips"
function vsnp() { nvim ~/.vim/plugged/vim-snippets/UltiSnips/"$1".snippets ; }
# }}} #

# }}} config files #

#  applications {{{ # 
silent="> /dev/null 1>&1& "

alias h="htop -s PERCENT_MEM"
alias hc="htop -s PERCENT_CPU"
alias r="ranger"
alias mr="man ranger"
alias clc="cloc ."
function z() { nohup zathura $1 > /dev/null 2>&1& ; }
function ev() { nohup evince $1 > /dev/null 2>&1& ; }
function chr() { google-chrome $1 ; }
alias n="nvim"
alias sni="sudo nvim"
function mrk() { pandoc -o ${1%.*}.html $1 ; } 

#  auto-clicker {{{ # 

function auc() { xdotool click --repeat 1000000 --delay $1 1 ; } 
# alias auc1="xdotool click --repeat 1000000 --delay 1 1"
# alias auc3="xdotool click --repeat 1000000 --delay 300 1"
# alias auc5="xdotool click --repeat 1000000 --delay 500 1"
# alias kauc="pkill -f xdotool"

#  }}} auto-clicker # 

# alias rsl="java -jar ~/Downloads/RuneLite.jar"
alias swex="sudo nohup ~/Downloads/swex.appimage $silent"

alias vbn="cvlc --loop --alsa-gain 1 ~/Music/brown-noise.mp3"
alias rmsw="rm .sw*"

function rs(){ redshift -P -O $(echo "scale=2;$1*1000" | bc) ; }
alias rx="redshift -x"

alias gpe="gpg --encrypt --recipient"
alias gpd="gpg --decrypt"

#  pass {{{ # 

alias ps="pass"
alias psc="pass -c"
alias pse="pass edit"
alias psi="pass insert -m"
alias psg="pass generate -c"
alias yh="echo 'kevin.mok@live.ca' | xclip -selection clipboard"
alias yg="xclip -selection clipboard ~/.password-store/social/gmail"
alias yu="echo 'kevin.mok@mail.utoronto.ca' | xclip -selection clipboard"

#  }}} pass # 

#  python related {{{ # 
function grpy() { grep $1 *.py ; } 
alias p3="python3"
alias py="python"
#  }}} python related # 

alias pg="ping -c 5 8.8.8.8"
alias wo="ctl start netctl-auto@wlp3s0.service"
alias wf="ctl stop netctl-auto@wlp3s0.service"

alias wt="watson"

#  }}} applications # 

#  git {{{ # 
# aliases {{{
alias gstr="git config credential.helper store"

#  add {{{ # 
alias ga="git add -A . && gs"
alias gac="git add -A . && git commit -S"
alias gacu="git add -A . && git commit"
#  }}} add # 

#  diff/log {{{ # 
alias gd="git diff -w"
function gde() { git diff --cached -- ':(exclude)'$1 ; }
alias gdc="git diff --cached"
alias gds="git diff --stat"
alias gdt="git difftool --tool=vimdiff"
alias gl="git log"
alias gsl="git shortlog"
#  }}}  diff/log # 

#  update {{{ # 

alias gs="git status -u"
alias gchom="git checkout master"
alias gchnw="git checkout -b wip"
alias gchw="git checkout wip"
alias gheadm1="git reset --hard HEAD~1"
alias gls="git ls-tree -r HEAD --name-only"

#  push {{{ # 
alias gst="git stash"
alias gstp="git stash pop"

alias gc="git commit -S"
alias gcu="git commit"
alias gcam="ga && git commit --amend --no-edit -S"
alias gcamp="ga && git commit --amend --no-edit -S && gpsf"
# todo: fix
function gcm(){ echo git commit -m \""$1"\" ; }

function psgi() { 
	git add .
	git commit -m -S '.'
	git push
} 
alias gps="git push"
alias gpsi="git push --set-upstream origin master"
alias gpsf="git push --force"
alias gclear="git stash clear"
#  }}} push # 

#  pull {{{ # 
alias gfe="git fetch"
alias gpl="git pull --rebase"
alias grbc="git rebase --continue"
#  }}} pull # 

#  }}} update # 

#  edit {{{ # 
alias vre="ni README.md"
alias crm="mrk README.md"
#  }}} edit # 

# aliases }}}

# functions {{{
alias gcho="git checkout"
alias gchon="git checkout -b"
function gchof() { git checkout $1 $2 ; }

alias gcln="git clone"
alias gchp="git cherry-pick"
alias gchpc="git cherry-pick --continue"

# add multiple push repos
function gremotes() {
	git remote set-url --add --push origin $1
	git remote set-url --add --push origin $2
	git remote -v
}

# gmrgr: merge repos {{{ # 
function gmrgr() { 
	# 1 = remote name, 2 = remote path
	git remote add $1 $2
	git fetch $1
	# whichever branch you want to merge
	git merge --allow-unrelated-histories $1/master 
	git remote remove $1
}
#  }}} merge repos # 

# assume file unchanged
alias gunc="git update-index --assume-unchanged"
# delete branch locally and on server
function grmb() { git push origin --delete $1 && git branch -D $1 ; }

# functions }}}

#  }}} git # 

#  coding projs {{{ # 
coding_dir="~/coding"
alias cdn="$cd_coding_dir"

alias gx="ni ~/Documents/csgo-config/autoexec.cfg"

#  trapbot {{{ # 
alias tb="$cd_coding_dir/trapbot"
	alias vtb="$cd_coding_dir/trapbot && ni scan_reddit.py"
	alias ptb="python scan_reddit.py"
	alias rtb="$cd_coding_dir/trapbot && python scan_reddit.py"
#  }}} trapbot # 

#  spotify-lib-vis {{{ # 

spv_dir="$coding_dir""/spotify-lib-vis"
alias svl="f $spv_dir/src/login"
alias sva="f $spv_dir/src/api"
alias svg="f $spv_dir/src/graphs"
alias svscs="f $spv_dir/src/static/scss"
alias svcss="f $spv_dir/src/spotifyvis/static/scss"
function ssv() {
	source ../bin/activate
	python manage.py runserver
}
alias sssv="sv && ssv"
alias spvdb="psql -d spotifyvis -U django"
function mig() {
	python manage.py makemigrations
	python manage.py migrate --run-syncdb
	ssv
}
alias cldb="python manage.py flush --no-input && ssv"
alias djs="python manage.py shell"
alias upip="pip list --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1  | xargs -n1 pip install -U"
alias ureq="pip freeze > requirements.txt"

# scan history
alias hlg="cat $spv_dir/src/api/management/commands/update-history.log | tail -n 1"
alias crnl="grep \"(kevin) CMD\" /var/log/syslog | tail -n 1 && hlg"
alias hs="$spv_dir/src/update-history.sh && hlg"
# removes all but newest file
# alias rmol="ls -t | tail -n +2 | xargs rm -- && l"

#  }}} spotify-lib-vis # 

# # Stardew Valley {{{
	# sdv_save_dir=~/Documents/sdv-save
	# alias sdv="f $sdv_save_dir"
	# alias smp="~/Downloads/sdv/smapi/install\ on\ Linux.sh"
	# # alias imc="sdv && source import-save.sh coop"
	# function ucf() { f ~/Documents/StardewMods/UncaughtFish ; }
	# function svmd() { f ~/.local/share/Steam/steamapps/common/Stardew\ Valley/Mods ; }
	# function svm() { mv $1 ~/.local/share/Steam/steamapps/common/Stardew\ Valley/Mods ; }
# # }}}

alias shc="cs && shellcheck"

#  }}} coding projs # 

#  school {{{ # 

alias pdl="pdflatex"
alias tcl="tex-clean"

# 343
alias ij="sudo ~/Downloads/idea/bin/idea.sh $silent"
alias a2="f ~/Documents/school/343/a2"
alias a2j="f ~/Documents/school/343/a2/java/src"
alias q2="psql -U postgres -d 343-a2 -f q2-test.sql"
alias q2o="psql -U postgres -d 343-a2 -f q2-test.sql -o q2.out"
alias q2a="psql -U postgres -d 343-a2 -f q2.sql"
alias q4="psql -U postgres -d 343-a2 -f q4-test.sql"
alias q4a="psql -U postgres -d 343-a2 -f q4.sql"

#  }}} school # 
